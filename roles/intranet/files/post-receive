#!/usr/bin/env python
"""post-receive hook based on git-multimail.

Sends out an email and triggers a build in Jenkins.

"""

import os
import sys
import urllib2

import git_multimail


# Custom templates.
git_multimail.REFCHANGE_INTRO_TEMPLATE = """\
%(pusher)s pushed a change to %(refname_type)s %(short_refname)s
in repository %(repo_shortname)s.

"""
git_multimail.FOOTER_TEMPLATE = ""
git_multimail.REWIND_ONLY_TEMPLATE = """\
This update removed existing revisions from the reference, leaving the
reference pointing at a previous point in the repository history.

"""
git_multimail.NON_FF_TEMPLATE = """\
This update added new revisions after undoing existing revisions.

"""
git_multimail.NEW_REVISIONS_TEMPLATE = ""
git_multimail.REVISION_INTRO_TEMPLATE = """\
%(pusher)s pushed a commit to %(refname_type)s %(short_refname)s
in repository %(repo_shortname)s.

"""
git_multimail.REVISION_FOOTER_TEMPLATE = ""
git_multimail.COMBINED_INTRO_TEMPLATE = """\
%(pusher)s pushed a commit to %(refname_type)s %(short_refname)s
in repository %(repo_shortname)s.

"""
git_multimail.COMBINED_FOOTER_TEMPLATE = ""

# Specify which "git config" section contains the configuration for
# git-multimail:
config = git_multimail.Config('multimailhook')

# Select the type of environment:
try:
    environment = git_multimail.GenericEnvironment(config=config)
except git_multimail.ConfigurationException:
    sys.stderr.write('*** %s\n' % sys.exc_info()[1])
    sys.exit(1)

# Choose the method of sending emails based on the git config:
mailer = git_multimail.choose_mailer(config, environment)

# Read changes from stdin and send notification emails:
git_multimail.run_as_post_receive_hook(environment, mailer)


# Trigger CI build in Jenkins.
trigger = "https://ci.quinn.tk/git/notifyCommit?url=" + os.getcwd()
response = urllib2.urlopen(trigger)
print response.read()


# Trigger update in Redmine.
rmconfig = git_multimail.Config('redminehook')
rmproject = rmconfig.get('project')
rmservicekey = rmconfig.get('servicekey')
if rmproject and rmservicekey:
    redmine = "https://pm.quinn.tk/sys/fetch_changesets?id=" + \
        rmproject + "&key=" + rmservicekey
    rmresponse = urllib2.urlopen(redmine)
    print rmresponse.read()
